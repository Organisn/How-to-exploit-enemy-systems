const express = require('express');
const Pool = require('pg-pool');
const pool = new Pool({ // Use dotenv
  host: 'localhost',
  database: 'postgres',
  user: 'postgres',
  password: '',
  port: 5432,
  ssl: true,
  max: 1, // set pool max size to 1
  idleTimeoutMillis: 1000, // close idle clients after 1 second
  connectionTimeoutMillis: 1000, // return an error after 1 second if connection could not be established
  maxUses: 7500, // close (and replace) a connection after it has been used 7500 times
})
const path = require('path');
const app = express();
const appPort = 3000;

app.use(express.static(path.join(__dirname,'\\web')));

// JSON body-parser already included in express.js
app.use(express.urlencoded({
  extended: true
}));

app.get('/', (req, res) => {
  res.sendFile(path.join(__dirname, '\\web\\accesso.html'));
});

app.post('/oligarchs/:id', (req, res) => {

  const connection = mysql2.createConnection({
    host: 'localhost', // Fill with your DB and DBMS connection details
    user: 'root', // Use Dotenv npm package options to secret 'em
    password: 'mysqlrootpassword',
    database: 'info_sensibili'
  });
  
  connection.query(  //execute for prepared statements, which protects from injection 
    `SELECT o.firstname, o.lastname, s.title FROM oligarchs o 
      JOIN involvements i ON i.oligarch_username = o.username AND i.oligarch_password = o.password
      JOIN stuffs s ON s.title = i.stuff_id 
        WHERE o.username = ? AND o.password = ? AND s.legality = 1`,
    [req.body.username, req.body.password],

    function(err, results, fields) {
      console.log(results);
      console.log(fields);
      // HTML result page
      var toPrint = `<html><head><title>Results</title></head><body><center><br><h2>Available infos</h2>`;
      
      if (results.length > 0) 
        for (let index = 0; index < results.length; index++) {
          const row = results[index];
          if (index == 0) 
            toPrint += `
              <p>Firstname: ${row.firstname}</p>
              <p>Lastname: ${row.lastname}</p>
              <p>Activities:</p>
            `;
          toPrint += `<p>=> ${row.title}</p>`;
        }

      else 
        toPrint += `<p>Unregistered profile</p><br>`;
    
      toPrint += `<a href="/">New Access</a></center></body></html>`;
      res.send(toPrint);
    }
  );

});

app.listen(port, () => {
  console.log(`App listening on port ${port}\nCTRL + C to terminate...`);
});